database.driverClassName=org.postgresql.Driver
database.url=jdbc:postgresql://localhost:5432/appsdbtest
database.userName=appsdbtest
database.password=appsdbtest
database.schemaNames=appsdbtest
dbMaintainer.script.locations=../../apps/apps-db-scripts/src/main/resources/bdd

org.dbmaintain.DbMaintainer.factory=org.dbmaintain.DbMaintainerFactory
org.dbmaintain.database.Database.implClassName.postgresql=org.dbmaintain.database.impl.PostgreSqlDatabase
org.dbmaintain.script.parser.ScriptParserFactory.implClassName.postgresql=org.dbmaintain.script.parser.impl.PostgreSqlScriptParserFactory
dbMaintainer.script.encoding=UTF-8
dbMaintainer.postProcessingScript.directoryName=postprocessing
dbMaintainer.script.index.regexp=^([0-9]+)(?:_|$)
dbMaintainer.script.qualifier.regexp=(?:\\G|_)#([a-zA-Z0-9]+)(?:_|$)
dbMaintainer.script.targetDatabase.regexp=(?:\\G|_)@([a-zA-Z0-9]+)(?:_|$)
dbMaintainer.script.ignoreCarriageReturnsWhenCalculatingCheckSum=false
dbMaintainer.cleanDb=false
dbMaintainer.fromScratch.enabled=true
dbMaintainer.script.patch.qualifiers=patch
# If this property is set to true, a patch script is allowed to be executed
# even if another script with a higher index was already executed.
dbMaintainer.allowOutOfSequenceExecutionOfPatches=false
# The maximum nr of chars of the script content to log when exception occurs, 0 to not log any script content
dbMaintainer.maxNrOfCharsWhenLoggingScriptContent=0

# Defines whether script last modification dates can be used to decide whether an existing script has changed. If set 
# to true, the dbmaintainer will decide that a file didn't change since the last time if it's last modification date hasn't
# changed. If it did change, it will first calculate the checksum of the file to verify that the content really
# changed. Setting this property to true improves performance: if set to false the checksum of every script must
# be calculated for each run of the dbmaintainer.
dbMaintainer.useScriptFileLastModificationDates=true

# Set to true if characters can be escaped by using backslashes. For example '\'' instead of the standard SQL way ''''.
# Note this is not standard SQL behavior and is therefore disabled by default.
dbMaintainer.script.backSlashEscapingEnabled=false
dbMaintainer.disableConstraints=false

# If set to true, all database sequences and identity columns are set to a minimum value after the execution of the scripts.
# The minimum accepted sequence value is indicated by the property sequenceUpdater.lowestAcceptableSequenceValue
dbMaintainer.updateSequences=true
sequenceUpdater.lowestAcceptableSequenceValue=1

# Fully qualified classname of the factory that is going to create the db clearer instance
org.dbmaintain.structure.clear.DBClearer.factory=org.dbmaintain.structure.clear.DBClearerFactory
# Fully qualified classname of the factory that is going to create the db cleaner instance
org.dbmaintain.structure.clean.DBCleaner.factory=org.dbmaintain.structure.clean.DBCleanerFactory
# Fully qualified classname of the factory that is going to create the constraints disabler instance
org.dbmaintain.structure.constraint.ConstraintsDisabler.factory=org.dbmaintain.structure.constraint.ConstraintsDisablerFactory
# Fully qualified classname of the factory that is going to create the sequence updater instance
org.dbmaintain.structure.sequence.SequenceUpdater.factory=org.dbmaintain.structure.sequence.SequenceUpdaterFactory
# Fully qualified classname of the factory that is going to create the executed script info source instance
org.dbmaintain.script.executedscriptinfo.ExecutedScriptInfoSource.factory=org.dbmaintain.script.executedscriptinfo.ExecutedScriptInfoSourceFactory
# Fully qualified classname of the factory that is going to create the script runner instance
# The default value is 'org.dbmaintain.scriptrunner.impl.DefaultScriptRunner', which executes a regular SQL script.
# For oracle there is also an implementation 'org.dbmaintain.scriptrunner.SqlPlusScriptRunnerFactory' that
# uses SQL*Plus to execute the scripts
# For DB2 there is also an implementation 'org.dbmaintain.scriptrunner.Db2ScriptRunnerFactory' that
# uses the DB2 CLP to execute the scripts
org.dbmaintain.script.runner.ScriptRunner.factory=org.dbmaintain.script.runner.JdbcScriptRunnerFactory
# Fully qualified classname of the factory that is going to create the script archive creator instance
org.dbmaintain.script.archive.ScriptArchiveCreator.factory=org.dbmaintain.script.archive.ScriptArchiveCreatorFactory





# Name of the table that contains the database update script that have already been executed on the database.
dbMaintainer.executedScriptsTableName=dbmaintain_scripts
# Name of the column in which the name of the executed script file is stored
dbMaintainer.fileNameColumnName=file_name
dbMaintainer.fileNameColumnSize=150
# Name of the column in which the last modification date of the executed script file is stored.
dbMaintainer.fileLastModifiedAtColumnName=file_last_modified_at
# Name of the column in which the checksum of the content of the script is stored.
dbMaintainer.checksumColumnName=checksum
dbMaintainer.checksumColumnSize=50
# Name of the column that stores the timestamp at which the script was executed
dbMaintainer.executedAtColumnName=executed_at
dbMaintainer.executedAtColumnSize=20
# Name of the column in which is stored whether the script ran without error or not.
dbMaintainer.succeededColumnName=succeeded
# If set to true, the table DBMAINTAIN_SCRIPTS will be created automatically if it does not exist yet. 
# If false, an exception is thrown, indicating how to create the table manually. 
dbMaintainer.autoCreateDbMaintainScriptsTable=true
dbMaintainer.timestampFormat=yyyy-MM-dd HH:mm:ss

# Extension of the files containing the database update scripts
dbMaintainer.script.fileExtensions=sql,ddl

database.identifierQuoteString.postgresql=auto

database.storedIndentifierCase.postgresql=auto